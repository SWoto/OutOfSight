{
	"info": {
		"_postman_id": "933d76b9-e882-462f-a512-7275ab56b6e2",
		"name": "OutOfSight",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Status",
			"item": [
				{
					"name": "Get Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d93496c-319f-4ce9-bc77-fff4c70376a9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "dd6dc2e5-9bb0-4f47-a58f-d182fceb519d",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{url}}:{{port}}{{API_STR}}/status",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			],
			"id": "da612254-c23e-4652-8a94-72ef02e9d38d"
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Create User /user/signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d93496c-319f-4ce9-bc77-fff4c70376a9",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.environment.set(\"email\", data.email);",
									"pm.environment.set(\"id\", data.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "2d439020-26c5-4147-9d71-53ba8acfbb17",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nickname\": \"{{$randomUserName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"{{rand_password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url}}:{{port}}{{API_STR}}/user/signup",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get User by id /user/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d93496c-319f-4ce9-bc77-fff4c70376a9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "24da87a6-eeee-4001-83e0-41df3154f09b",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{url}}:{{port}}{{API_STR}}/user/{{id}}",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Update User by id /user/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf03b589-96a9-44f1-ade5-166950f3b8d3",
								"exec": [
									"pm.test(\"Status code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.environment.set(\"email\", data.email);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "2d051bc2-dc60-471c-81fe-95be2f81f664",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nickname\": \"{{$randomUserName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"{{rand_password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url}}:{{port}}{{API_STR}}/user/{{id}}",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Patch User by id /user/<id>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d93496c-319f-4ce9-bc77-fff4c70376a9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var data = pm.response.json();",
									"",
									"pm.environment.set(\"email\", data.email);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "bf27f1d1-b473-4218-971c-5b5aa25f6991",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nickname\": \"{{$randomUserName}}\",\n    \"password\": \"{{rand_password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{url}}:{{port}}{{API_STR}}/user/{{id}}",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Login User /user/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d93496c-319f-4ce9-bc77-fff4c70376a9",
								"exec": [
									"var data = pm.response.json();",
									"pm.environment.set(\"access_token\", data.access_token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "e0db4c16-88f7-4b2f-8bbd-3aadc463a215",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "{{email}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{rand_password}}",
									"description": "}}",
									"type": "text"
								}
							]
						},
						"url": "{{url}}:{{port}}{{API_STR}}/user/login",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get User from Token /user/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d93496c-319f-4ce9-bc77-fff4c70376a9",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "521e1960-407e-4837-9dd6-1ddbf408a237",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{access_token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{url}}:{{port}}{{API_STR}}/user/",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Delete User from Token /user/",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d93496c-319f-4ce9-bc77-fff4c70376a9",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "8f8f5445-051a-490d-ac50-f47d338fa4bc",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{access_token}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{url}}:{{port}}{{API_STR}}/user/",
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			],
			"id": "bc1a5f15-39ef-4ea2-a68d-6bab0f377cb4"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "315bf25a-2778-43f1-a62d-4e62d71d92d4",
			"key": "id",
			"value": "1"
		},
		{
			"id": "ecfe1aee-5d14-444d-9176-182a19d022ee",
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}